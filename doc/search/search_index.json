{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"AI enterprise gateway implemented in Rust \ud83e\udd80 that provides secure, governed access to LLMs (Large Language Models) for organizations. It acts as a single entry point for employees and projects to access both cloud-based and self-hosted AI models while enforcing security, compliance, and usage controls. The software helps organizations manage AI governance by providing centralized control over model access, usage tracking, and security policies. Features \ud83d\udd11 Token Management : Generate, view, and delete API tokens \ud83c\udfaf Quota Management : Set token quotas per user, group or project \ud83d\udcca Usage Monitoring : Real-time usage tracking and analytics \ud83e\udd16 Provider Management : Configure multiple LLM providers (OpenAI, Claude, DeepSeek, Ollama, etc.) \u23f1\ufe0f Rate Limiting : Built-in rate limiting with configurable thresholds \ud83d\udcdd Audit Logs : Detailed logging of API requests and responses \ud83d\udda5\ufe0f Embedded Web UI : Built-in admin interface for configuration and monitoring \ud83d\udd12 PII Protection : Built-in Personally Identifiable Information detection and blocking \ud83d\udcc8 Prometheus Metrics : Built-in Prometheus endpoint for monitoring and alerting \ud83d\udd10 Trusted Header Authentication : Support for authentication via trusted HTTP headers \ud83d\udeab Content Filtering : Block requests containing blacklisted words (e.g. \"confidential\") \ud83d\udeb7 Group Access Control : Restrict access by user groups with disabled_groups configuration Need another feature? Don't hesitate to send an email or create a GitHub ticket ! Quick Links Getting Started Core Features Use Cases Technical Architecture Configuration API Reference Quickstart Download the binary in the packages and the configuration file conf.yml file, run it : ./burgonet-gw -c conf.yml To access the administration web application, open the following URL in your browser : http://127.0.0.1:6189/ When you have created you token, you can test it via the convenience chat web app embedded, open the following URL in your browser: http://127.0.0.1:6190/ configure the the server url (default port is 6191) and your token: Use Cases Explore common scenarios and configurations: Departmental Access Control Cost Management with Quotas Preventing Data Leakage Departmental Access Control Let's consider an organization with three departments: Department Access Level Restrictions IT All models Quotas & rate limits Finance Self-hosted only No external models HR All models Unlimited budget Alice works in the IT Department Bob works in the Finance Department Charlie works in the Human Resources Department The organization's governance rules are configured as follows: The IT Department has access to all models, with quotas and rate limits The Finance Department does not have access to external models only self-hosted. The Human Resources Department has access to all models with unlimited budget Restrict keywords \u26a0\ufe0f Implemented, to be documented Prevent leakage of personal idenfier & information leak Note \u26a0\ufe0f Implemented, to be documented curl http://127.0.0.1:8080/ollama/gemma2/2b/ -i \\ -H \"Authorization: Bearer your-token-here\" \\ -d '{ \"model\": \"gemma2:2b-instruct-q6_K\", \"messages\": [ { \"role\": \"user\", \"content\": \"Hi my name is Jean-Claude Dusse\" } ] , \"stream\": false }' HTTP/1.1 403 Forbidden Server: openresty/1.21.4.1 Date: Thu, 16 Jan 2025 13:01:06 GMT Content-Type: text/plain Transfer-Encoding: chunked Connection: keep-alive Request contains sensitive personal information Cost Management with Quotas Administrators can effectively control costs by configuring quotas for model usage and user access. Key Features: Per-Model Quotas : Set usage limits for individual models to manage resource allocation. This granular approach allows administrators to optimize costs while maintaining flexibility and control over system resources. models: - location: \"/echo\" model_name: \"echo\" proxy_pass: \"http://localhost:9999\" api_key: \"$DEEPSEEK_API_KEY\" parser: \"ollama\" disabled_groups: \"mammals, birds\" blacklist_words: \"confidential, mycorp\" pii_protection_url: \"http://127.0.0.1:8001/check-pii-base64\" quotas: - max_tokens: minute: 500 hour: 6000 day: 10000 week: 40000 - max_requests: second: 1 minute: 15","title":"Home"},{"location":"#features","text":"\ud83d\udd11 Token Management : Generate, view, and delete API tokens \ud83c\udfaf Quota Management : Set token quotas per user, group or project \ud83d\udcca Usage Monitoring : Real-time usage tracking and analytics \ud83e\udd16 Provider Management : Configure multiple LLM providers (OpenAI, Claude, DeepSeek, Ollama, etc.) \u23f1\ufe0f Rate Limiting : Built-in rate limiting with configurable thresholds \ud83d\udcdd Audit Logs : Detailed logging of API requests and responses \ud83d\udda5\ufe0f Embedded Web UI : Built-in admin interface for configuration and monitoring \ud83d\udd12 PII Protection : Built-in Personally Identifiable Information detection and blocking \ud83d\udcc8 Prometheus Metrics : Built-in Prometheus endpoint for monitoring and alerting \ud83d\udd10 Trusted Header Authentication : Support for authentication via trusted HTTP headers \ud83d\udeab Content Filtering : Block requests containing blacklisted words (e.g. \"confidential\") \ud83d\udeb7 Group Access Control : Restrict access by user groups with disabled_groups configuration Need another feature? Don't hesitate to send an email or create a GitHub ticket !","title":"Features"},{"location":"#quick-links","text":"Getting Started Core Features Use Cases Technical Architecture Configuration API Reference","title":"Quick Links"},{"location":"#quickstart","text":"Download the binary in the packages and the configuration file conf.yml file, run it : ./burgonet-gw -c conf.yml To access the administration web application, open the following URL in your browser : http://127.0.0.1:6189/ When you have created you token, you can test it via the convenience chat web app embedded, open the following URL in your browser: http://127.0.0.1:6190/ configure the the server url (default port is 6191) and your token:","title":"Quickstart"},{"location":"#use-cases","text":"Explore common scenarios and configurations: Departmental Access Control Cost Management with Quotas Preventing Data Leakage","title":"Use Cases"},{"location":"#departmental-access-control","text":"Let's consider an organization with three departments: Department Access Level Restrictions IT All models Quotas & rate limits Finance Self-hosted only No external models HR All models Unlimited budget Alice works in the IT Department Bob works in the Finance Department Charlie works in the Human Resources Department The organization's governance rules are configured as follows: The IT Department has access to all models, with quotas and rate limits The Finance Department does not have access to external models only self-hosted. The Human Resources Department has access to all models with unlimited budget","title":"Departmental Access Control"},{"location":"#restrict-keywords","text":"\u26a0\ufe0f Implemented, to be documented","title":"Restrict keywords"},{"location":"#prevent-leakage-of-personal-idenfier-information-leak","text":"Note \u26a0\ufe0f Implemented, to be documented curl http://127.0.0.1:8080/ollama/gemma2/2b/ -i \\ -H \"Authorization: Bearer your-token-here\" \\ -d '{ \"model\": \"gemma2:2b-instruct-q6_K\", \"messages\": [ { \"role\": \"user\", \"content\": \"Hi my name is Jean-Claude Dusse\" } ] , \"stream\": false }' HTTP/1.1 403 Forbidden Server: openresty/1.21.4.1 Date: Thu, 16 Jan 2025 13:01:06 GMT Content-Type: text/plain Transfer-Encoding: chunked Connection: keep-alive Request contains sensitive personal information","title":"Prevent leakage of personal idenfier &amp; information leak"},{"location":"#cost-management-with-quotas","text":"Administrators can effectively control costs by configuring quotas for model usage and user access. Key Features: Per-Model Quotas : Set usage limits for individual models to manage resource allocation. This granular approach allows administrators to optimize costs while maintaining flexibility and control over system resources. models: - location: \"/echo\" model_name: \"echo\" proxy_pass: \"http://localhost:9999\" api_key: \"$DEEPSEEK_API_KEY\" parser: \"ollama\" disabled_groups: \"mammals, birds\" blacklist_words: \"confidential, mycorp\" pii_protection_url: \"http://127.0.0.1:8001/check-pii-base64\" quotas: - max_tokens: minute: 500 hour: 6000 day: 10000 week: 40000 - max_requests: second: 1 minute: 15","title":"Cost Management with Quotas"},{"location":"about/","text":"About Burgonet License Burgonet is provided under the Commons Clause License Condition v1.0 which allows free non-production use. The license includes these key terms: Free use for non-production purposes Commercial use requires a separate license No right to sell the software or services derived from it Attribution requirements Enterprise Support For production deployments or commercial use, enterprise licenses and support packages are available. These include: Production deployment rights Priority support Custom feature development Security audits Compliance consulting Contact sebastien.campion@foss4.eu to discuss licensing options and enterprise support. Copyright Copyright (c) 2025 S\u00e9bastien Campion, FOSS4. All rights reserved. The software follows Fair-code principles, balancing open access with sustainable development.","title":"About"},{"location":"about/#about-burgonet","text":"","title":"About Burgonet"},{"location":"about/#license","text":"Burgonet is provided under the Commons Clause License Condition v1.0 which allows free non-production use. The license includes these key terms: Free use for non-production purposes Commercial use requires a separate license No right to sell the software or services derived from it Attribution requirements","title":"License"},{"location":"about/#enterprise-support","text":"For production deployments or commercial use, enterprise licenses and support packages are available. These include: Production deployment rights Priority support Custom feature development Security audits Compliance consulting Contact sebastien.campion@foss4.eu to discuss licensing options and enterprise support.","title":"Enterprise Support"},{"location":"about/#copyright","text":"Copyright (c) 2025 S\u00e9bastien Campion, FOSS4. All rights reserved. The software follows Fair-code principles, balancing open access with sustainable development.","title":"Copyright"},{"location":"api-reference/","text":"\ud83d\udea7\ud83d\udd28\u23f3 Work in progress","title":"API Reference"},{"location":"api-reference/#work-in-progress","text":"","title":"\ud83d\udea7\ud83d\udd28\u23f3 Work in progress"},{"location":"chat-interface/","text":"Chat Interface The Burgonet Gateway provides a web-based chat interface for interacting with supported LLM models. Features \ud83d\udde8\ufe0f Conversation History : View and manage past conversations \ud83e\udd16 Model Selection : Choose from available LLM models \ud83d\udd11 Token Management : Set and save API tokens \ud83c\udf10 Server Configuration : Configure gateway URL \ud83d\udcdd Message Formatting : Supports markdown and code blocks \u23f1\ufe0f Real-time Responses : Streamed responses for fast interaction Accessing the Chat Interface The chat interface is available at: http://<chat_host>:<chat_port> Default values: - Host: 127.0.0.1 - Port: 6190 Interface Components Navigation Bar Gateway URL configuration API Token input Save button Sidebar New Chat button Conversation history list Chat Window Message display area User and assistant messages Input Area Model selection dropdown Message input field Send button Configuration The chat interface can be configured in conf.yml : chat_host: 127.0.0.1 # Host to serve chat interface chat_port: 6190 # Port for chat interface Keyboard Shortcuts Enter : Send message (without shift) Shift+Enter : New line in message input Ctrl+Enter : Send message (alternative) Esc : Clear message input Troubleshooting Issue : Chat interface not loading - Verify chat service is running - Check firewall settings for chat port - Confirm correct gateway URL in navigation bar Issue : Messages not sending - Verify API token is valid - Check model selection - Confirm gateway is running and accessible","title":"Chat Interface"},{"location":"chat-interface/#chat-interface","text":"The Burgonet Gateway provides a web-based chat interface for interacting with supported LLM models.","title":"Chat Interface"},{"location":"chat-interface/#features","text":"\ud83d\udde8\ufe0f Conversation History : View and manage past conversations \ud83e\udd16 Model Selection : Choose from available LLM models \ud83d\udd11 Token Management : Set and save API tokens \ud83c\udf10 Server Configuration : Configure gateway URL \ud83d\udcdd Message Formatting : Supports markdown and code blocks \u23f1\ufe0f Real-time Responses : Streamed responses for fast interaction","title":"Features"},{"location":"chat-interface/#accessing-the-chat-interface","text":"The chat interface is available at: http://<chat_host>:<chat_port> Default values: - Host: 127.0.0.1 - Port: 6190","title":"Accessing the Chat Interface"},{"location":"chat-interface/#interface-components","text":"Navigation Bar Gateway URL configuration API Token input Save button Sidebar New Chat button Conversation history list Chat Window Message display area User and assistant messages Input Area Model selection dropdown Message input field Send button","title":"Interface Components"},{"location":"chat-interface/#configuration","text":"The chat interface can be configured in conf.yml : chat_host: 127.0.0.1 # Host to serve chat interface chat_port: 6190 # Port for chat interface","title":"Configuration"},{"location":"chat-interface/#keyboard-shortcuts","text":"Enter : Send message (without shift) Shift+Enter : New line in message input Ctrl+Enter : Send message (alternative) Esc : Clear message input","title":"Keyboard Shortcuts"},{"location":"chat-interface/#troubleshooting","text":"Issue : Chat interface not loading - Verify chat service is running - Check firewall settings for chat port - Confirm correct gateway URL in navigation bar Issue : Messages not sending - Verify API token is valid - Check model selection - Confirm gateway is running and accessible","title":"Troubleshooting"},{"location":"configuration/","text":"Configuration example The configuration file is a YAML file that contains all the settings for the gateway. --- version: 1 threads: 3 pid_file: /tmp/burgonet.pid error_log: /tmp/load_balancer_err.log upgrade_sock: /tmp/load_balancer.sock db_filepath: database.redb port: 6191 host: 127.0.0.1 prometheus_host: 127.0.0.1 prometheus_port: 6192 admin_host: 127.0.0.1 admin_port: 6189 chat_host: 127.0.0.1 chat_port: 6190 echo_host: 127.0.0.1 echo_port: 6193 log_config_file: log4rs.yml trust_header_authentication: - Tailscale-User-Login - Cf-Access-Authenticated-User-Email - X-Forwarded-Email models: - location: \"/echo\" model_name: \"echo\" proxy_pass: \"http://127.0.0.1:6193/echo\" parser: \"echo\" api_key: \"$DEEPSEEK_API_KEY\" pii_protection_url: \"http://127.0.0.1:8001/check-pii-base64\" - location: \"/ollama/gemma2/2b/\" model_name: \"gemma2:2b-instruct-q6_K\" parser: \"ollama\" proxy_pass: \"http://127.0.0.1:11434/api/chat\" api_key: \"NA\" disabled_groups: \"mammals, birds\" blacklist_words: \"confidential, mycorp\" pii_protection_url: \"http://127.0.0.1:8001/check-pii-base64\" - location: \"/quotas/test\" model_name: \"gemma2:2b-instruct-q6_K\" parser: \"ollama\" proxy_pass: \"http://127.0.0.1:11434/api/chat\" api_key: \"NA\" disabled_groups: \"mammals, birds\" blacklist_words: \"confidential, mycorp\" pii_protection_url: \"http://127.0.0.1:8001/check-pii-base64\" quotas: - max_tokens: minute: 50000 hour: 60000 day: 1000000 week: 10000 - max_requests: second: 1 minute: 15 - location: \"/llamacpp/\" provider: \"llamacpp\" model_name: \"phi4-GGUF-Q4_K\" proxy_pass: \"http://m1:8081/completion\" - location: \"/api.openai.com/v1/chat/completions\" model_name: \"openai\" parser: \"openai\" proxy_pass: \"https://api.openai.com/v1/chat/completions\" api_key: \"$OPENAI_API_KEY\" - location: \"/api.deepseek.com/chat/completions\" model_name: \"deepseek-chat\" parser: \"deepseek\" proxy_pass: \"https://api.deepseek.com/chat/completions\" api_key: \"$DEEPSEEK_API_KEY\" - location: \"/api.openai.com/v1/chat/completions\" model_name: \"gpt4o\" proxy_pass: \"https://api.openai.com\" api_key: \"YOUR_API_KEY\" - location: \"/openai.azure.com/v1/chat/completions\" model_name: \"azuregpt4\" proxy_pass: \"https://YOUR_RESOURCE_NAME.openai.azure.com/openai/deployments/YOUR_DEPLOYMENT_ID-id/completions?api-version=2024-10-21\" api_key: \"YOUR_API_KEY\"","title":"Configuration"},{"location":"configuration/#configuration-example","text":"The configuration file is a YAML file that contains all the settings for the gateway. --- version: 1 threads: 3 pid_file: /tmp/burgonet.pid error_log: /tmp/load_balancer_err.log upgrade_sock: /tmp/load_balancer.sock db_filepath: database.redb port: 6191 host: 127.0.0.1 prometheus_host: 127.0.0.1 prometheus_port: 6192 admin_host: 127.0.0.1 admin_port: 6189 chat_host: 127.0.0.1 chat_port: 6190 echo_host: 127.0.0.1 echo_port: 6193 log_config_file: log4rs.yml trust_header_authentication: - Tailscale-User-Login - Cf-Access-Authenticated-User-Email - X-Forwarded-Email models: - location: \"/echo\" model_name: \"echo\" proxy_pass: \"http://127.0.0.1:6193/echo\" parser: \"echo\" api_key: \"$DEEPSEEK_API_KEY\" pii_protection_url: \"http://127.0.0.1:8001/check-pii-base64\" - location: \"/ollama/gemma2/2b/\" model_name: \"gemma2:2b-instruct-q6_K\" parser: \"ollama\" proxy_pass: \"http://127.0.0.1:11434/api/chat\" api_key: \"NA\" disabled_groups: \"mammals, birds\" blacklist_words: \"confidential, mycorp\" pii_protection_url: \"http://127.0.0.1:8001/check-pii-base64\" - location: \"/quotas/test\" model_name: \"gemma2:2b-instruct-q6_K\" parser: \"ollama\" proxy_pass: \"http://127.0.0.1:11434/api/chat\" api_key: \"NA\" disabled_groups: \"mammals, birds\" blacklist_words: \"confidential, mycorp\" pii_protection_url: \"http://127.0.0.1:8001/check-pii-base64\" quotas: - max_tokens: minute: 50000 hour: 60000 day: 1000000 week: 10000 - max_requests: second: 1 minute: 15 - location: \"/llamacpp/\" provider: \"llamacpp\" model_name: \"phi4-GGUF-Q4_K\" proxy_pass: \"http://m1:8081/completion\" - location: \"/api.openai.com/v1/chat/completions\" model_name: \"openai\" parser: \"openai\" proxy_pass: \"https://api.openai.com/v1/chat/completions\" api_key: \"$OPENAI_API_KEY\" - location: \"/api.deepseek.com/chat/completions\" model_name: \"deepseek-chat\" parser: \"deepseek\" proxy_pass: \"https://api.deepseek.com/chat/completions\" api_key: \"$DEEPSEEK_API_KEY\" - location: \"/api.openai.com/v1/chat/completions\" model_name: \"gpt4o\" proxy_pass: \"https://api.openai.com\" api_key: \"YOUR_API_KEY\" - location: \"/openai.azure.com/v1/chat/completions\" model_name: \"azuregpt4\" proxy_pass: \"https://YOUR_RESOURCE_NAME.openai.azure.com/openai/deployments/YOUR_DEPLOYMENT_ID-id/completions?api-version=2024-10-21\" api_key: \"YOUR_API_KEY\"","title":"Configuration example"},{"location":"features/","text":"Audit log Each exchange with the gateway is logged in a structured format. The logs are written to the standard output and can be redirected to a file or a log collector. Here is an example of a log entry: 2025-01-28T15:05:14.454037+01:00 INFO audit - df7f3c96-a4f6-4382-8a8a-b36ff13978bb User Some(\"alice\") accessed location /ollama/gemma2/2b/ 2025-01-28T15:05:14.454818+01:00 INFO audit - df7f3c96-a4f6-4382-8a8a-b36ff13978bb Request ### { \"model\": \"gemma2:2b-instruct-q6_K\", > 2025-01-28T15:05:14.962724+01:00 INFO audit - df7f3c96-a4f6-4382-8a8a-b36ff13978bb Response ### {\"created_at\":\"2025-01-28T14:05:14.960232Z\",\"done\":true,\"done_reason\":\"sto>","title":"Features"},{"location":"features/#audit-log","text":"Each exchange with the gateway is logged in a structured format. The logs are written to the standard output and can be redirected to a file or a log collector. Here is an example of a log entry: 2025-01-28T15:05:14.454037+01:00 INFO audit - df7f3c96-a4f6-4382-8a8a-b36ff13978bb User Some(\"alice\") accessed location /ollama/gemma2/2b/ 2025-01-28T15:05:14.454818+01:00 INFO audit - df7f3c96-a4f6-4382-8a8a-b36ff13978bb Request ### { \"model\": \"gemma2:2b-instruct-q6_K\", > 2025-01-28T15:05:14.962724+01:00 INFO audit - df7f3c96-a4f6-4382-8a8a-b36ff13978bb Response ### {\"created_at\":\"2025-01-28T14:05:14.960232Z\",\"done\":true,\"done_reason\":\"sto>","title":"Audit log"},{"location":"monitoring/","text":"Monitoring & Metrics Prometheus Integration Burgonet Gateway provides built-in Prometheus metrics endpoint for monitoring and alerting. The metrics are exposed on the configured host and port (default: 127.0.0.1:6192 ). Configuration The Prometheus endpoint can be configured in conf.yml : prometheus_host: 127.0.0.1 # Host to expose metrics on prometheus_port: 6192 # Port for metrics endpoint Available Metrics The gateway exposes the following metrics: burgonet_requests_total (counter): Total number of requests processed burgonet_input_tokens_total (counter): Total number of input tokens processed burgonet_output_tokens_total (counter): Total number of output tokens generated Example Prometheus Queries Requests per minute: rate(burgonet_requests_total[1m]) Input tokens per hour: rate(burgonet_input_tokens_total[1h]) Output tokens per day: rate(burgonet_output_tokens_total[1d]) Token ratio (output/input): burgonet_output_tokens_total / burgonet_input_tokens_total Grafana Dashboard A sample Grafana dashboard is available in the docs/grafana directory. It includes: Request rate over time Token usage trends Error rates System resource utilization Alerting Examples High request rate alert: - alert: HighRequestRate expr: rate(burgonet_requests_total[5m]) > 1000 for: 10m labels: severity: critical annotations: summary: \"High request rate detected\" description: \"Request rate is above 1000 req/min for 10 minutes\" Token quota warning: - alert: TokenQuotaWarning expr: burgonet_input_tokens_total % 1000000 > 900000 for: 5m labels: severity: warning annotations: summary: \"Token quota nearing limit\" description: \"Token usage is over 90% of quota\" Best Practices Monitor request rates and token usage trends Set alerts for quota thresholds Track token ratios to detect anomalies Correlate metrics with system resource usage","title":"Monitoring"},{"location":"monitoring/#monitoring-metrics","text":"","title":"Monitoring &amp; Metrics"},{"location":"monitoring/#prometheus-integration","text":"Burgonet Gateway provides built-in Prometheus metrics endpoint for monitoring and alerting. The metrics are exposed on the configured host and port (default: 127.0.0.1:6192 ).","title":"Prometheus Integration"},{"location":"monitoring/#configuration","text":"The Prometheus endpoint can be configured in conf.yml : prometheus_host: 127.0.0.1 # Host to expose metrics on prometheus_port: 6192 # Port for metrics endpoint","title":"Configuration"},{"location":"monitoring/#available-metrics","text":"The gateway exposes the following metrics: burgonet_requests_total (counter): Total number of requests processed burgonet_input_tokens_total (counter): Total number of input tokens processed burgonet_output_tokens_total (counter): Total number of output tokens generated","title":"Available Metrics"},{"location":"monitoring/#example-prometheus-queries","text":"Requests per minute: rate(burgonet_requests_total[1m]) Input tokens per hour: rate(burgonet_input_tokens_total[1h]) Output tokens per day: rate(burgonet_output_tokens_total[1d]) Token ratio (output/input): burgonet_output_tokens_total / burgonet_input_tokens_total","title":"Example Prometheus Queries"},{"location":"monitoring/#grafana-dashboard","text":"A sample Grafana dashboard is available in the docs/grafana directory. It includes: Request rate over time Token usage trends Error rates System resource utilization","title":"Grafana Dashboard"},{"location":"monitoring/#alerting-examples","text":"High request rate alert: - alert: HighRequestRate expr: rate(burgonet_requests_total[5m]) > 1000 for: 10m labels: severity: critical annotations: summary: \"High request rate detected\" description: \"Request rate is above 1000 req/min for 10 minutes\" Token quota warning: - alert: TokenQuotaWarning expr: burgonet_input_tokens_total % 1000000 > 900000 for: 5m labels: severity: warning annotations: summary: \"Token quota nearing limit\" description: \"Token usage is over 90% of quota\"","title":"Alerting Examples"},{"location":"monitoring/#best-practices","text":"Monitor request rates and token usage trends Set alerts for quota thresholds Track token ratios to detect anomalies Correlate metrics with system resource usage","title":"Best Practices"},{"location":"screenshots/","text":"Walk the talk Log example { \"time_local\": \"14/Jan/2025:11:06:14 +0000\", \"remote_addr\": \"192.168.65.1\", \"remote_user\": \"\", \"request\": \"POST /api.deepseek.com/v3/chat/completions HTTP/1.1\", \"status\": \"200\", \"body_bytes_sent\": \"440\", \"request_time\": \"1.977\", \"http_referrer\": \"\", \"http_user_agent\": \"curl/8.7.1\", \"http_x_forwarded_for\": \"\", \"host\": \"localhost\", \"authorization\": \"Bearer your-token-here\", \"upstream_addr\": \"104.18.27.90:443\", \"request_method\": \"POST\", \"http_version\": \"HTTP/1.1\", \"request_body\": \"{\\n \\\"model\\\": \\\"deepseek-chat\\\",\\n \\\"messages\\\": [\\n {\\\"role\\\": \\\"system\\\", \\\"content\\\": \\\"You are a helpful assistant.\\\"},\\n {\\\"role\\\": \\\"user\\\", \\\"content\\\": \\\"Hello\\\"}\\n ],\\n \\\"stream\\\": false\\n }\", \"response_body\": \"{\\\"id\\\":\\\"08118b43-3ec7-4691-b3c9-91bb5e1cbe23\\\",\\\"object\\\":\\\"chat.completion\\\",\\\"created\\\":1736852773,\\\"model\\\":\\\"deepseek-chat\\\",\\\"choices\\\":[{\\\"index\\\":0,\\\"message\\\":{\\\"role\\\":\\\"assistant\\\",\\\"content\\\":\\\"Hello! How can I assist you today? \ud83d\ude0a\\\"},\\\"logprobs\\\":null,\\\"finish_reason\\\":\\\"stop\\\"}],\\\"usage\\\":{\\\"prompt_tokens\\\":10,\\\"completion_tokens\\\":11,\\\"total_tokens\\\":21,\\\"prompt_cache_hit_tokens\\\":0,\\\"prompt_cache_miss_tokens\\\":10},\\\"system_fingerprint\\\":\\\"fp_3a5770e1b4\\\"}\", \"provider\": \"deepseek\", \"model_name\": \"deepseek\", \"model_version\": \"v3\" }","title":"Walk the talk"},{"location":"screenshots/#walk-the-talk","text":"","title":"Walk the talk"},{"location":"screenshots/#log-example","text":"{ \"time_local\": \"14/Jan/2025:11:06:14 +0000\", \"remote_addr\": \"192.168.65.1\", \"remote_user\": \"\", \"request\": \"POST /api.deepseek.com/v3/chat/completions HTTP/1.1\", \"status\": \"200\", \"body_bytes_sent\": \"440\", \"request_time\": \"1.977\", \"http_referrer\": \"\", \"http_user_agent\": \"curl/8.7.1\", \"http_x_forwarded_for\": \"\", \"host\": \"localhost\", \"authorization\": \"Bearer your-token-here\", \"upstream_addr\": \"104.18.27.90:443\", \"request_method\": \"POST\", \"http_version\": \"HTTP/1.1\", \"request_body\": \"{\\n \\\"model\\\": \\\"deepseek-chat\\\",\\n \\\"messages\\\": [\\n {\\\"role\\\": \\\"system\\\", \\\"content\\\": \\\"You are a helpful assistant.\\\"},\\n {\\\"role\\\": \\\"user\\\", \\\"content\\\": \\\"Hello\\\"}\\n ],\\n \\\"stream\\\": false\\n }\", \"response_body\": \"{\\\"id\\\":\\\"08118b43-3ec7-4691-b3c9-91bb5e1cbe23\\\",\\\"object\\\":\\\"chat.completion\\\",\\\"created\\\":1736852773,\\\"model\\\":\\\"deepseek-chat\\\",\\\"choices\\\":[{\\\"index\\\":0,\\\"message\\\":{\\\"role\\\":\\\"assistant\\\",\\\"content\\\":\\\"Hello! How can I assist you today? \ud83d\ude0a\\\"},\\\"logprobs\\\":null,\\\"finish_reason\\\":\\\"stop\\\"}],\\\"usage\\\":{\\\"prompt_tokens\\\":10,\\\"completion_tokens\\\":11,\\\"total_tokens\\\":21,\\\"prompt_cache_hit_tokens\\\":0,\\\"prompt_cache_miss_tokens\\\":10},\\\"system_fingerprint\\\":\\\"fp_3a5770e1b4\\\"}\", \"provider\": \"deepseek\", \"model_name\": \"deepseek\", \"model_version\": \"v3\" }","title":"Log example"},{"location":"technical/","text":"Technical Architecture Ports Configuration Burgonet Gateway uses several ports for different services: Port Service Description 6189 Admin Service Provides web UI and API for configuration and monitoring 6190 Chat Service Chat web UI with local storage 6191 Main Gateway Service Handles all API requests and routing (default) 6192 Prometheus Metrics Exposes monitoring metrics for scraping 6193 Echo Service Echo used to configure and tests These ports can be configured in the conf.yml file: port: 6191 # Main gateway port prometheus_port: 6192 # Metrics endpoint Request Flow sequenceDiagram participant User participant Gateway participant Database participant Provider User->>Gateway: API Request Gateway->>Database: Validate token Database-->>Gateway: Token status Gateway->>Gateway: Check rate limits Gateway->>Gateway: Check token quotas Gateway->>Gateway: Verify group access Gateway->>Gateway: Scan for PII Gateway->>Gateway: Check blacklisted words Gateway->>Provider: Forward request Provider-->>Gateway: Response Gateway->>Database: Log usage metrics Gateway->>Prometheus: Export metrics Gateway-->>User: Return response","title":"Architecture"},{"location":"technical/#technical-architecture","text":"","title":"Technical Architecture"},{"location":"technical/#ports-configuration","text":"Burgonet Gateway uses several ports for different services: Port Service Description 6189 Admin Service Provides web UI and API for configuration and monitoring 6190 Chat Service Chat web UI with local storage 6191 Main Gateway Service Handles all API requests and routing (default) 6192 Prometheus Metrics Exposes monitoring metrics for scraping 6193 Echo Service Echo used to configure and tests These ports can be configured in the conf.yml file: port: 6191 # Main gateway port prometheus_port: 6192 # Metrics endpoint","title":"Ports Configuration"},{"location":"technical/#request-flow","text":"sequenceDiagram participant User participant Gateway participant Database participant Provider User->>Gateway: API Request Gateway->>Database: Validate token Database-->>Gateway: Token status Gateway->>Gateway: Check rate limits Gateway->>Gateway: Check token quotas Gateway->>Gateway: Verify group access Gateway->>Gateway: Scan for PII Gateway->>Gateway: Check blacklisted words Gateway->>Provider: Forward request Provider-->>Gateway: Response Gateway->>Database: Log usage metrics Gateway->>Prometheus: Export metrics Gateway-->>User: Return response","title":"Request Flow"},{"location":"use-cases/","text":"Use Cases Explore common scenarios and configurations: Departmental Access Control Cost Management with Quotas Preventing Data Leakage Departmental Access Control Let's consider an organization with three departments: Department Access Level Restrictions IT All models Quotas & rate limits Finance Self-hosted only No external models HR All models Unlimited budget Alice works in the IT Department Bob works in the Finance Department Charlie works in the Human Resources Department The organization's governance rules are configured as follows: The IT Department has access to all models, with quotas and rate limits The Finance Department does not have access to external models only self-hosted. The Human Resources Department has access to all models with unlimited budget Restrict keywords \u26a0\ufe0f Implemented, to be documented Prevent leakage of personal idenfier & information leak Note \u26a0\ufe0f Implemented, to be documented curl http://127.0.0.1:8080/ollama/gemma2/2b/ -i \\ -H \"Authorization: Bearer your-token-here\" \\ -d '{ \"model\": \"gemma2:2b-instruct-q6_K\", \"messages\": [ { \"role\": \"user\", \"content\": \"Hi my name is Jean-Claude Dusse\" } ] , \"stream\": false }' HTTP/1.1 403 Forbidden Server: openresty/1.21.4.1 Date: Thu, 16 Jan 2025 13:01:06 GMT Content-Type: text/plain Transfer-Encoding: chunked Connection: keep-alive Request contains sensitive personal information Cost Management with Quotas Administrators can effectively control costs by configuring quotas for model usage and user access. Key Features: Per-Model Quotas : Set usage limits for individual models to manage resource allocation. This granular approach allows administrators to optimize costs while maintaining flexibility and control over system resources. models: - location: \"/echo\" model_name: \"echo\" proxy_pass: \"http://localhost:9999\" api_key: \"$DEEPSEEK_API_KEY\" parser: \"ollama\" disabled_groups: \"mammals, birds\" blacklist_words: \"confidential, mycorp\" pii_protection_url: \"http://127.0.0.1:8001/check-pii-base64\" quotas: - max_tokens: minute: 500 hour: 6000 day: 10000 week: 40000 - max_requests: second: 1 minute: 15","title":"Use Cases"},{"location":"use-cases/#use-cases","text":"Explore common scenarios and configurations: Departmental Access Control Cost Management with Quotas Preventing Data Leakage","title":"Use Cases"},{"location":"use-cases/#departmental-access-control","text":"Let's consider an organization with three departments: Department Access Level Restrictions IT All models Quotas & rate limits Finance Self-hosted only No external models HR All models Unlimited budget Alice works in the IT Department Bob works in the Finance Department Charlie works in the Human Resources Department The organization's governance rules are configured as follows: The IT Department has access to all models, with quotas and rate limits The Finance Department does not have access to external models only self-hosted. The Human Resources Department has access to all models with unlimited budget","title":"Departmental Access Control"},{"location":"use-cases/#restrict-keywords","text":"\u26a0\ufe0f Implemented, to be documented","title":"Restrict keywords"},{"location":"use-cases/#prevent-leakage-of-personal-idenfier-information-leak","text":"Note \u26a0\ufe0f Implemented, to be documented curl http://127.0.0.1:8080/ollama/gemma2/2b/ -i \\ -H \"Authorization: Bearer your-token-here\" \\ -d '{ \"model\": \"gemma2:2b-instruct-q6_K\", \"messages\": [ { \"role\": \"user\", \"content\": \"Hi my name is Jean-Claude Dusse\" } ] , \"stream\": false }' HTTP/1.1 403 Forbidden Server: openresty/1.21.4.1 Date: Thu, 16 Jan 2025 13:01:06 GMT Content-Type: text/plain Transfer-Encoding: chunked Connection: keep-alive Request contains sensitive personal information","title":"Prevent leakage of personal idenfier &amp; information leak"},{"location":"use-cases/#cost-management-with-quotas","text":"Administrators can effectively control costs by configuring quotas for model usage and user access. Key Features: Per-Model Quotas : Set usage limits for individual models to manage resource allocation. This granular approach allows administrators to optimize costs while maintaining flexibility and control over system resources. models: - location: \"/echo\" model_name: \"echo\" proxy_pass: \"http://localhost:9999\" api_key: \"$DEEPSEEK_API_KEY\" parser: \"ollama\" disabled_groups: \"mammals, birds\" blacklist_words: \"confidential, mycorp\" pii_protection_url: \"http://127.0.0.1:8001/check-pii-base64\" quotas: - max_tokens: minute: 500 hour: 6000 day: 10000 week: 40000 - max_requests: second: 1 minute: 15","title":"Cost Management with Quotas"}]}